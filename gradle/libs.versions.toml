# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format
[versions]
commons-cli = "1.4"
com-diffplug-spotless = "6.21.0"
com-draeger-medical-t2iapi = "4.2.0"
com-google-code-gson = "2.11.0"
com-google-guava = "33.4.7-jre"
com-github-jk1-license = "2.9"
com-github-spotbugs = "5.0.14"
com-github-spotbugs-annotations = "4.8.6"
com-lemonappdev-konsist = "0.15.1"
com-lmax-disruptor = "3.4.2"
com-tngtech-archunit = "1.2.1"
detekt = "1.23.3"
de-undercouch-download = "5.3.0"
edu-sc-seis-launch4j = "2.5.0"
findbugs = "3.0.2"
grpc-version = "1.60.1"
guice = "7.0.0"
jakarta-inject = "2.0.1"
jakarta-xml-bind = "4.0.2"
javax-annotation = "1.3.2"
javax-persistence = "2.2"
jetbrains-annotations = "24.1.0"
net-sf-saxon-he = "9.9.1-7"
commons-io = "2.17.0"
opentest4j = "1.3.0"
org-apache-commons = "3.12.0"
org-apache-derby = "10.15.2.0"
org-apache-httpclient = "4.5.14"
org-apache-httpcore = "4.4.16"
org-apache-logging-log4j = "2.24.1"
org-apache-logging-log4j-log4j-api-kotlin = "1.4.0"
org-bouncycastle = "1.78.1"
org-glassfish-jaxb = "4.0.5"
org-hibernate-core = "5.4.24.Final"
# also check that the version in root settings.gradle.kts aligns, since version catalogs can not be used there
# (see: https://discuss.gradle.org/t/how-to-use-version-catalog-in-the-root-settings-gradle-kts-file/44603)
org-jetbrains-kotlin = "1.9.24"
org-junit = "5.10.3"
org-mockito = "5.12.0"
org-mockito-kotlin = "5.4.0"
org-somda-sdc = "6.2.2"
org-somda-sdc-model = "6.0.1"
org-tomlj = "1.0.0"
protoc-version = "3.25.0"
slf4j-api = "2.0.17"
threeten-jaxb-core = "2.2.0"

[libraries]
com-draeger-medical-sdccc-bom = { module = "com.draeger.medical:sdccc-bom" }
com-draeger-medical-sdccc-plugin-bom = { module = "com.draeger.medical:sdccc-plugin-bom" }
com-google-code-findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }
com-google-inject-guice = { module = "com.google.inject:guice", version.ref = "guice" }
com-google-inject-extensions-guice-assistedinject = { module = "com.google.inject.extensions:guice-assistedinject", version.ref = "guice" }
com-google-protobuf-protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protoc-version" }
detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
io-github-threeten-jaxb-threeten-jaxb-core = { module = "io.github.threeten-jaxb:threeten-jaxb-core", version.ref = "threeten-jaxb-core" }
io-grpc-grpc-api = { module = "io.grpc:grpc-api", version.ref = "grpc-version" }
io-grpc-grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc-version" }
jakarta-xml-bind-jakarta-xml-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jakarta-xml-bind" }
org-glassfish-jaxb-jaxb-core = { module = "org.glassfish.jaxb:jaxb-core", version.ref = "org-glassfish-jaxb" }
org-glassfish-jaxb-jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "org-glassfish-jaxb" }
org-glassfish-jaxb-jaxb-xjc = { module = "org.glassfish.jaxb:jaxb-xjc", version.ref = "org-glassfish-jaxb" }
org-jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }
org-junit-jupiter-bom = { module = "org.junit:junit-bom", version.ref = "org-junit" }
org-junit-jupiter-junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
org-junit-jupiter-junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
org-opentest4j-opentest4j = { module = "org.opentest4j:opentest4j", version.ref = "opentest4j"}
com-github-spotbugs = { module = "com.github.spotbugs:spotbugs", version.ref = "com-github-spotbugs" }
com-draeger-medical-t2iapi = { module = "com.draeger.medical:t2iapi", version.ref = "com-draeger-medical-t2iapi" }
com-github-spotbugs-spotbugs-annotations = { module = "com.github.spotbugs:spotbugs-annotations", version.ref = "com-github-spotbugs-annotations" }
com-google-guava-guava = { module = "com.google.guava:guava", version.ref = "com-google-guava" }
com-google-code-gson-gson = { module = "com.google.code.gson:gson", version.ref = "com-google-code-gson" }
com-lemonappdev-konsist = { module = "com.lemonappdev:konsist", version.ref = "com-lemonappdev-konsist" }
com-lmax-disruptor = { module = "com.lmax:disruptor", version.ref = "com-lmax-disruptor" }
com-tngtech-archunit-archunit = { module = "com.tngtech.archunit:archunit", version.ref = "com-tngtech-archunit" }
com-tngtech-archunit-archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "com-tngtech-archunit" }
com-tngtech-archunit-archunit-junit5-api = { module = "com.tngtech.archunit:archunit-junit5-api", version.ref = "com-tngtech-archunit" }
commons-cli-commons-cli = { module = "commons-cli:commons-cli", version.ref = "commons-cli" }
jakarta-inject-jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject" }
javax-annotation-javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation" }
javax-persistence-javax-persistence-api = { module = "javax.persistence:javax.persistence-api", version.ref = "javax-persistence" }
net-sf-saxon-saxon-he = { module = "net.sf.saxon:Saxon-HE", version.ref = "net-sf-saxon-he" }
commons-io-commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
org-apache-commons-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "org-apache-commons" }
org-apache-derby-derby = { module = "org.apache.derby:derby", version.ref = "org-apache-derby" }
org-apache-httpcomponents-httpclient = { module = "org.apache.httpcomponents:httpclient", version.ref = "org-apache-httpclient" }
org-apache-httpcomponents-httpcore = { module = "org.apache.httpcomponents:httpcore", version.ref = "org-apache-httpcore" }

#log4j and slf4j
org-apache-logging-log4j-log4j-bom = { module = "org.apache.logging.log4j:log4j-bom", version.ref = "org-apache-logging-log4j"  }
org-apache-logging-log4j-log4j-api = { module = "org.apache.logging.log4j:log4j-api" }
org-apache-logging-log4j-log4j-core = { module = "org.apache.logging.log4j:log4j-core" }
org-apache-logging-log4j-log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl" }
org-apache-logging-log4j-log4j-api-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "org-apache-logging-log4j-log4j-api-kotlin" }
org-slf4j-slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j-api" }
org-slf4j-jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j-api" }

org-bouncycastle-bcpkix-jdk18on = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "org-bouncycastle" }
org-bouncycastle-bcprov-jdk18on = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "org-bouncycastle" }
org-hibernate-hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "org-hibernate-core" }
org-jetbrains-kotlin-kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "org-jetbrains-kotlin" }
org-jetbrains-kotlin-kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
org-jetbrains-kotlin-kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
org-junit-jupiter-junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params" }
org-junit-platform-junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
org-junit-platform-junit-platform-engine = { module = "org.junit.platform:junit-platform-engine" }
org-junit-platform-junit-platform-reporting = { module = "org.junit.platform:junit-platform-reporting" }
org-mockito-kotlin-mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "org-mockito-kotlin" }
org-mockito-mockito-core = { module = "org.mockito:mockito-core", version.ref = "org-mockito" }
org-somda-sdc-common = { module = "org.somda.sdc:common", version.ref = "org-somda-sdc" }
org-somda-sdc-glue = { module = "org.somda.sdc:glue", version.ref = "org-somda-sdc" }
org-somda-sdc-dpws = { module = "org.somda.sdc:dpws", version.ref = "org-somda-sdc" }
org-somda-sdc-biceps = { module = "org.somda.sdc:biceps", version.ref = "org-somda-sdc" }
org-somda-sdc-biceps-model = { module = "org.somda.sdc:biceps-model", version.ref = "org-somda-sdc-model" }
org-somda-sdc-dpws-model = { module = "org.somda.sdc:dpws-model", version.ref = "org-somda-sdc-model" }
org-tomlj-tomlj = { module = "org.tomlj:tomlj", version.ref = "org-tomlj" }
com-github-jk1-license-report= { module = "com.github.jk1:gradle-license-report", version.ref = "com-github-jk1-license" }

# workaround for making these available in build-logic
gradleplugins-spotbugs = { module = "com.github.spotbugs.snom:spotbugs-gradle-plugin", version.ref = "com-github-spotbugs" }
gradleplugins-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "com-diffplug-spotless" }
gradleplugins-kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "org-jetbrains-kotlin" }
gradleplugins-download = { module = "de.undercouch:gradle-download-task", version.ref = "de-undercouch-download" }
gradleplugins-launch4j = { module = "edu.sc.seis.launch4j:launch4j", version.ref = "edu-sc-seis-launch4j" }
