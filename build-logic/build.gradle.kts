/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Support convention plugins written in Kotlin. Convention plugins are build scripts in 'src/main' that automatically become available as plugins in the main build.
    `kotlin-dsl`
}

repositories {
    // Use the plugin portal to apply community plugins in convention plugins.
    gradlePluginPortal()
}

gradlePlugin {
    plugins {
        create("XjcPlugin") {
            id = "org.somda.sdc.xjc"
            implementationClass = "org.somda.sdc.XjcPlugin"
        }
        create("licenseReport") {
            id = "com.example.license-report"
            implementationClass = "LicenseReportPlugin"
        }
    }
}

dependencies {
    api(enforcedPlatform(libs.com.draeger.medical.sdccc.plugin.bom))
    implementation(files(libs.javaClass.superclass.protectionDomain.codeSource.location))
    implementation(libs.com.github.jk1.license.report)
    implementation(libs.gradleplugins.spotbugs)
    implementation(libs.gradleplugins.spotless)
    implementation(libs.gradleplugins.kotlin.jvm)
    implementation(libs.gradleplugins.download)
    implementation(libs.gradleplugins.launch4j)
}
